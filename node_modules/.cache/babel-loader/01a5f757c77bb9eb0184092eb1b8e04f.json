{"ast":null,"code":"import _classCallCheck from \"/home/nan/reactjs/graph-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nan/reactjs/graph-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nan/reactjs/graph-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nan/reactjs/graph-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nan/reactjs/graph-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nan/reactjs/graph-app/src/WorldMap.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport worlddata from './world';\nimport { geoMercator, geoPath } from 'd3-geo';\n\nvar WorldMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WorldMap, _Component);\n\n  function WorldMap() {\n    _classCallCheck(this, WorldMap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WorldMap).apply(this, arguments));\n  }\n\n  _createClass(WorldMap, [{\n    key: \"render\",\n    value: function render() {\n      var projection = geoMercator();\n      var pathGenerator = geoPath().projection(projection);\n      var countries = worlddata.features.map(function (d, i) {\n        return React.createElement(\"path\", {\n          key: 'path' + i,\n          d: pathGenerator(d),\n          className: \"countries\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"svg\", {\n        width: 500,\n        height: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, countries);\n    }\n  }]);\n\n  return WorldMap;\n}(Component);\n\nexport { WorldMap as default };","map":{"version":3,"sources":["/home/nan/reactjs/graph-app/src/WorldMap.js"],"names":["React","Component","worlddata","geoMercator","geoPath","WorldMap","projection","pathGenerator","countries","features","map","d","i"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,QAArC;;IAEqBC,Q;;;;;;;;;;;;;6BACR;AACL,UAAMC,UAAU,GAAGH,WAAW,EAA9B;AACA,UAAMI,aAAa,GAAGH,OAAO,GAAGE,UAAV,CAAqBA,UAArB,CAAtB;AACA,UAAME,SAAS,GAAGN,SAAS,CAACO,QAAV,CACbC,GADa,CACT,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAU;AACX,UAAA,GAAG,EAAE,SAASA,CADH;AAEX,UAAA,CAAC,EAAEL,aAAa,CAACI,CAAD,CAFL;AAGX,UAAA,SAAS,EAAC,WAHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AAAA,OADS,CAAlB;AAMA,aAAO;AAAK,QAAA,KAAK,EAAE,GAAZ;AAAiB,QAAA,MAAM,EAAE,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACFH,SADE,CAAP;AAGH;;;;EAbiCP,S;;SAAjBI,Q","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nimport worlddata from './world'\nimport { geoMercator, geoPath } from 'd3-geo'\n\nexport default class WorldMap extends Component {\n    render() {\n        const projection = geoMercator()\n        const pathGenerator = geoPath().projection(projection)\n        const countries = worlddata.features\n            .map((d, i) => <path\n                key={'path' + i}\n                d={pathGenerator(d)}\n                className='countries'\n            />)\n        return <svg width={500} height={500}>\n            {countries}\n        </svg>\n    }\n}"]},"metadata":{},"sourceType":"module"}